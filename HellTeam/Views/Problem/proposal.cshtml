@model ChillLearn.ViewModels.ProposalDetailModel
@using ChillLearn;
@{
    ViewBag.Title = "Proposal Detail";
    Layout = "~/Views/Shared/StudentLayout.cshtml";
}
<style type="text/css">
    #createClassDiv {
        display: none;
    }
</style>
<script type="text/javascript">
    $(function () {
        var classType = $("#drp-class-type").find(':selected').val();
        AdjustForm(classType);
        $('input[type=radio][name=SessionType]').change(function () {
            AdjustForm(this.value);
        });
    });

    function AdjustForm(classType) {
        if (classType == 2) {
            $('#div-record').addClass('hide');
            $('#div-classtime').addClass('hide');
            $('#div-timezone').addClass('hide');
        }
        else {
            $('#div-record').removeClass('hide');
            $('#div-classtime').removeClass('hide');
            $('#div-timezone').removeClass('hide');
        }
    }
</script>
<div class="row">
    <div class="col-md-12">
        @if (ViewData.ModelState["error"] != null)
        {
            <div class="alert alert-danger" role="alert">
                @Html.ValidationMessage("error")
            </div>
        }
        @if (ViewData.ModelState["success"] != null)
        {
            <div class="alert alert-success" role="alert">
                @Html.ValidationMessage("success")
            </div>
        }
        <div class="card pending-tutor-box">
            <div class="card-body p-t-10 p-b-10">
                <div class="row">
                    <div class="col-md-6">
                        <h4>@Resources.Resources.TxtProblemDescription</h4>
                    </div>
                    @if ((Model.ProblemDetail.ProblemStatus == (int)ProblemStatus.Created || Model.ProblemDetail.ProblemStatus == (int)ProblemStatus.TeacherSelected) && (Model.ProblemDetail.Status != (int)(BidStatus.Offered) && Model.ProblemDetail.Status != (int)(BidStatus.Declined)))
                    {
                        using (Html.BeginForm("proposal", "Problem", FormMethod.Post, new { enctype = "multipart/form-data", @class = "col-md-6" }))
                        {
                            <div class="text-right">
                                <input id="btnCreateClass" type="button" name="accept" value="@Resources.Resources.LblAccept" class="btn btn-primary" />
                                <input type="submit" name="decline" value="@Resources.Resources.LblDecline" class="btn red" />
                            </div>
                        }
                    }
                    else if (Model.ProblemDetail.ClassType != null && Model.ProblemDetail.ClassType == 2 &&
                        Model.ProblemDetail.ClassStatus != (int)ClassStatus.Completed && Model.ProblemDetail.Status == (int)BidStatus.Accepted)
                    {
                        using (Html.BeginForm("completeclass", "problem", FormMethod.Post, new { enctype = "multipart/form-data", @class = "col-md-6" }))
                        {
                            <div class="text-right">
                                <input type="hidden" name="bidID" value="@Model.BidId" />
                                <input type="hidden" name="classId" value="@Model.ProblemDetail.ClassID" />
                                <input type="submit" name="complete" value="@Resources.Resources.LblMarkComplete" class="btn btn-primary" />
                            </div>
                        }
                    }
                </div>
            </div>
            @if (Model.ProblemDetail.Status != (int)(BidStatus.Offered) && Model.ProblemDetail.Status != (int)(BidStatus.Declined))
            {
                <div id="createClassDiv" class="container">
                    @using (Html.BeginForm("class", "problem", FormMethod.Post, new { @id = "submitForm" }))
                    {
                        @Html.HiddenFor(model => model.ClassID)
                        @Html.HiddenFor(model => model.BidId)
                        <input id="end-time" type="hidden" name="ClassEndTime" />
                        <input type="hidden" name="ProblemID" value="@Model.ProblemDetail.ProblemID">
                        <input type="hidden" name="TeacherID" value="@Model.ProblemDetail.TeacherID">
                        <input type="hidden" name="BrainCertId" id="BrainCertId">
                        <div class="form-body">
                            <hr class="m-t-0 m-b-20">
                            <div class="form-row">
                                <div class="col-md-6 mb-3">
                                    <label for="validationCustom02">@Resources.Resources.LblTitle</label>
                                    <input type="text" class="form-control" placeholder="@Resources.Resources.PlcTitle" name="title" id="clsTitle" autofocus>
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger", @required = "true" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="credit-refund-block credit-refund-block-new">
                                        <h4 class="card-title text-left">@Resources.Resources.LblClassType</h4>
                                        <div class="demo-radio-button text-left">
                                            @foreach (var item in Model.SessionTypes)
                                            {
                                                <input name="SessionType" type="radio" id="SessionType_@item.Value" class="with-gap radio-col-pink" value="@item.Value">
                                                <label for="SessionType_@item.Value">@item.Text</label>
                                            }
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Record, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="col-md-6 mb-3">
                                        <label>@Resources.Resources.LblClassType</label>
                                        @Html.DropDownListFor(model => model.SessionType, Model.SessionTypes, new { @class = "form-control pl-1 select2", @id = "drp-class-type" })
                                    </div>*@
                                <div class="col-md-6 mb-3">
                                    <label for="validationCustom02">@Resources.Resources.LblClassDate</label>
                                    <div class="input-group" data-autoclose="true">
                                        <input type="text" autocomplete="off" class="form-control" id="datepicker-autoclose" name="Date" placeholder="@Resources.Resources.PlcSelectDate">
                                        <div class="input-group-append">
                                            <span class="input-group-text"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3" id="div-classtime">
                                    <label for="validationCustom02">@Resources.Resources.LblClassTime</label>
                                    <div class="input-group timepicker" data-autoclose="true">
                                        <input type="text" class="form-control" placeholder="09:30PM" name="StartTime" id="startTime">
                                        <div class="input-group-append">
                                            <span class="input-group-text"><i class="fa fa-clock-o" aria-hidden="true"></i></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3" id="div-timezone">
                                    <label for="validationCustom01">@Resources.Resources.LblTimeZone</label>
                                    @Html.DropDownListFor(model => model.TimeZone, Model.TimeZones as SelectList, Resources.Resources.LblTimeZone, new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(model => model.TimeZone, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="validationCustom01">@Resources.Resources.LblSubject</label>
                                    @Html.DropDownListFor(model => model.Subject, Model.Subjects as SelectList, Resources.Resources.LblSelectSubject, new { @class = "form-control pl-1 select2" })
                                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3" id="div-duration">
                                    <label for="validationCustom02">@Resources.Resources.LblDuration</label>
                                    <input type="number" id="duration" class="form-control" name="Duration" min="0.5" step="any" placeholder="Hours">
                                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3" id="div-record">
                                    <label for="validationCustom01">@Resources.Resources.TxtRecordClass</label>
                                    <select name="Record" class="form-control pl-1 select2">
                                        <option value="1">@Resources.Resources.LblYes</option>
                                        <option value="0">@Resources.Resources.LblNo</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-3">
                                    <label for="validationCustom02">@Resources.Resources.LblDescription</label>
                                    <textarea class="form-control" name="Description"></textarea>
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="form-row">
                                    <div class="col-md-12 mb-3">
                                        <div class="credit-refund-block credit-refund-block-new">
                                            <h4 class="card-title text-left">@Resources.Resources.TxtRecordClass</h4>
                                            <div class="demo-radio-button text-left">
                                                <input name="Record" type="radio" id="radio_30" class="with-gap radio-col-red" checked="" value="1">
                                                <label for="radio_30">@Resources.Resources.LblYes</label>
                                                <input name="Record" type="radio" id="radio_31" class="with-gap radio-col-pink" value="0">
                                                <label for="radio_31">@Resources.Resources.LblNo</label>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Record, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>*@
                            <div class="form-row">
                                <div class="col-md-12 mb-3">
                                    <input type="submit" id="createClass" class="btn btn-primary float-right" value="@Resources.Resources.BtnCreateClass" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            <div>
                <hr class="m-t-0 m-b-5">
            </div>
            <div class="card-body p-t-0">
                <div class="table-responsive">
                    <table class="table vm no-th-brd pro-of-month manage-admin-list">
                        <tbody>
                            @if (Model != null && Model.ProblemDetail != null)
                            {
                                <tr>
                                    <td class="payment-text">

                                        <p>@Model.ProblemDetail.ProblemDescription</p>
                                        <div>
                                            <span class="text-muted">@Resources.Resources.LblSubject: @Model.ProblemDetail.SubjectName</span>
                                        </div>
                                        <div>
                                            <small class="text-muted">@Model.ProblemDetail.ProblemDate.Value.ToString("D")</small>
                                        </div>
                                        <br />
                                        @foreach (var file in Model.ProblemDetail.ProblemFiles)
                                        {
                                            <div class="mt-2">
                                                <u>
                                                    <a target="_blank" href="~/uploads/questionfiles/@file.FileName">@file.FileName</a>
                                                </u>
                                            </div>
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td class="payment-text">
                                        <h4>@Model.ProblemDetail.UserName @Resources.Resources.TxtProposal</h4>
                                        <p>@Model.ProblemDetail.TeacherResponse</p>
                                        <small class="text-muted">@Model.ProblemDetail.ResponseDate.Value.ToString("D")</small>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td>@Resources.Resources.TxtNoDetailAvailable</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="ps-container teacher-block-inner">
                            <div style="max-height:500px; overflow-y:auto;" id="slimScrollChat">
                                @if (Model != null && Model.Messages != null)
                                {
                                    foreach (var msg in Model.Messages)
                                    {
                                        if (@HttpContext.Current.Session["UserId"].ToString() != msg.FromUser)
                                        {
                                            <div class="chat-message-box">
                                                @Html.Raw(@msg.Message1)
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="chat-message-box-skin">
                                                @Html.Raw(@msg.Message1)
                                            </div>
                                        }
                                    }
                                }
                            </div>
                            @if (Model.ProblemDetail != null && Model.ProblemDetail.Status != (int)BidStatus.Declined)
                            {
                                <div class="row">
                                    <div class="type_msg col-md-12 m-t-10 m-b-10">
                                        @using (Html.BeginForm("BidResponse", "Problem", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                        {
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="input_msg_write">
                                                        @Html.HiddenFor(model => model.BidId)
                                                        @Html.TextAreaFor(model => model.Response, new { @class = "write_msg", @required = "" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row mt-2">
                                                <div class="col-md-6">
                                                    <input type="file" name="files" multiple />
                                                </div>
                                                <div class="col-md-6 text-right">
                                                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.BtnSend" />
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://momentjs.com/downloads/moment-with-locales.js"></script>
<script type="text/javascript">
    $('#btnCreateClass').click(function () {
        $('#createClassDiv').slideToggle();
    });

    $('.timepicker').clockpicker({
        twelvehour: true,
        leadingSpaceAmPm: true,
        autoclose: false,
        donetext: 'Done'
    }).find('input').change(function () {
        var durationMinutes = $('#duration').val() * 60;
        if (durationMinutes > 30)
            durationMinutes = 30;
        var classEndTime = moment.utc(this.value, 'hh:mm A').add(durationMinutes, 'minutes').format('hh:mm A')
        $('#end-time').val(classEndTime);
    });

    $('#duration').keyup(function () {
        var durationMinutes = this.value * 60;
        if (durationMinutes > 30)
            durationMinutes = 30;
        var classTime = $('#startTime').val();
        var classEndTime = moment.utc(classTime, 'hh:mm A').add(durationMinutes, 'minutes').format('hh:mm A')
        $('#end-time').val(classEndTime);
    });

</script>