@model ChillLearn.ViewModels.QuestionDetailModel
@using ChillLearn;
@{
    ViewBag.Title = "Question Detail";
    Layout = "~/Views/Shared/TeacherLayout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="card pending-tutor-box pb-3">
            <div class="card-body p-t-10 p-b-10">
                <div class="d-flex no-block">
                    <div>
                        <h4 class="card-title inbox-text">@Resources.Resources.TxtQuestionDetail</h4>
                    </div>
                </div>
            </div>
            <div>
                <hr class="m-t-0 m-b-5">
            </div>
            <div class="card-body p-t-0">
                <div class="table-responsive">
                    <table class="table vm no-th-brd pro-of-month manage-admin-list">
                        <tbody>
                            @if (Model != null && Model.QuestionDetail != null)
                            {
                                string TypeSession = Enumerations.GetEnumDescription((SessionType)Model.QuestionDetail.Type);
                                <tr>
                                    <td class="payment-text">
                                        <h4>Problem Description</h4>
                                        <p>@Model.QuestionDetail.ProblemDescription</p>
                                        <span>@Model.QuestionDetail.CreationDate.Value.ToString("D")</span> <br />
                                        <span class="text-muted">@Resources.Resources.TxtDeadline :  @Model.QuestionDetail.Deadline.Value.ToString("D")</span> <br />
                                        <span class="text-muted">@Resources.Resources.TxtHours :  @Model.QuestionDetail.HoursNeeded</span> <br />
                                        <span class="text-muted">@Resources.Resources.TxtSubject :  @Model.QuestionDetail.SubjectName</span> <br />
                                        <span class="text-muted">@Resources.Resources.TxtType :  @TypeSession</span><br />
                                        <small class="text-muted">@Resources.Resources.TxtPostedBy :  @Model.QuestionDetail.UserName</small>
                                        <br />
                                        <br />
                                        @foreach (var file in Model.QuestionDetail.ProblemFiles)
                                        {
                                            <div class="mt-2">
                                                <u>
                                                    <a target="_blank" href="~/uploads/questionfiles/@file.FileName">@file.FileName</a>
                                                    @*<a target="_blank" href="~/uploads/questionfiles/@file.FileName">@Resources.Resources.LblDownloadAttachment</a>*@
                                                </u>
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr><td>@Resources.Resources.MsgNoQuestionDetail</td></tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            @if (ViewData.ModelState["error"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @Html.ValidationMessage("error")
                </div>
            }
            @if (ViewData.ModelState["success"] != null)
            {
                <div class="alert alert-success" role="alert">
                    @Html.ValidationMessage("success")
                </div>
            }
            else
            {
                using (Html.BeginForm("writeproposal", "tutor", FormMethod.Post))
                {
                    @Html.HiddenFor(model => model.ProblemId)
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.Response, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label for="Response" class="control-label col-md-12">@Resources.Resources.TxtWriteProposal</label>
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.Response, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Response, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12">
                            <input type="submit" value="@Resources.Resources.BtnSubmit" class="btn btn-sm btn-primary pull-right" />
                        </div>
                    </div>

                }
            }
            <br />
        </div>
    </div>
</div>