@model ChillLearn.CustomModels.ClassEditModel
@using ChillLearn.Enums;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/TeacherLayout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="card radius">
            <div class="card-body p-t-15 p-b-15 tutor-application">
                <div class="table-responsive no-wrap">
                    <table class="table vm no-th-brd pro-of-month manage-admin-list m-b-0">
                        <tr>
                            <td>
                                <h6 class="text-white">@Resources.Resources.TxtUpdateClass</h6>
                            </td>

                        </tr>
                    </table>
                </div>
            </div>

            <div class="card-body p-t-0">
                @if (Model != null)
                {
                <form class=" form-list" action="/class/edit" id="submitForm" method="POST" enctype="multipart/form-data">
                    @*<input type="hidden" name="BrainCertId" id="BrainCertId">*@
                    @Html.HiddenFor(model => model.ClassId)
                    @Html.HiddenFor(model => model.BrainCertId)
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-body">
                        @*<hr class="m-t-0 m-b-20">*@
                        @*<h5 class="box-title text-uppercase font-medium">Personal Details</h5>*@
                        <hr class="m-t-0 m-b-20">
                        @*@Html.ValidationSummary(false, "", new { @class = "text-danger" })*@
                        @if (ViewData.ModelState["success"] != null)
                        {
                            <div class="alert alert-success" role="alert" style="position:relative;">
                                @Html.ValidationMessage("success")
                            </div>
                        }
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblTitle</label>
                                @Html.TextBoxFor(m => m.Title, new { @class = "form-control", @id = "clsTitle", @placeholder = Resources.Resources.PlcTitle })
                                @*<input type="text" class="form-control" placeholder="@Resources.Resources.PlcTitle" name="title" id="clsTitle">*@
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblClassDate</label>
                                <div class="input-group" data-autoclose="true">
                                    <input type="text" autocomplete="off" class="form-control" id="datepicker-autoclose" value="@Model.ClassDate"
                                           name="ClassDate" placeholder="@Resources.Resources.PlcSelectDate">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.ClassDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            @*<div class="col-md-6 mb-3">
                    <label for="validationCustom01">@Resources.Resources.LblClassType</label>
                    @Html.DropDownListFor(model => model.SessionType, new SelectList(Model.SessionTypes, "Value", "Text"), new { @class = "form-control custom-select selectBorder pl-1" })
                    @Html.ValidationMessageFor(model => model.SessionType, "", new { @class = "text-danger" })
                </div>*@
                            <div class="col-md-6 mb-3">
                                <div class="credit-refund-block credit-refund-block-new">
                                    <label>@Resources.Resources.LblClassType</label>
                                    <div class="demo-radio-button text-left">

                                        @foreach (var st in ViewBag.SessionTypes)
                                        {

                                            var enumDisplayStatus = (SessionType)Model.Type;
                                            string sessionType = enumDisplayStatus.ToString();

                                            if (Model.Type.ToString() == st.Value)
                                            {
                                                <input name="Type" type="radio" checked="checked" id="@st.Text" class="with-gap radio-col-red" value="@st.Value">
                                                <label for="@st.Text">@st.Text</label>
                                            }
                                            else
                                            {
                                                <input name="Type" type="radio" id="@st.Text" class="with-gap radio-col-red" value="@st.Value">
                                                <label for="@st.Text">@st.Text</label>
                                            }


                                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblClassTime</label>
                                <div class="input-group clockpicker" data-autoclose="true">
                                    <input type="text" class="form-control" value="@Model.ClassTime" name="ClassTime" id="clsTime">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fa fa-clock-o" aria-hidden="true"></i></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.ClassTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom01">@Resources.Resources.LblSubject</label>
                                @Html.DropDownListFor(Model => Model.SubjectId, ViewBag.Subjects as SelectList, Resources.Resources.LblSelectSubject, new { @class = "form-control custom-select pl-1 select2" })
                                @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblDuration</label>
                                <input type="number" class="form-control" name="Duration" placeholder="Hours" value="@Model.Duration">
                                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblDescription</label>
                                <textarea class="form-control" name="Description">@Model.Description</textarea>
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="credit-refund-block credit-refund-block-new">
                                    <h4 class="card-title  m-t-20 text-left">@Resources.Resources.TxtRecordClass</h4>
                                    <div class="demo-radio-button text-left">
                                        @if (Model.Record.ToLower() == "true")
                                        {
                                            <input name="Record" type="radio" id="radio_30" class="with-gap radio-col-red" checked="checked" value="1">
                                            <label for="radio_30">@Resources.Resources.LblYes</label>
                                            <input name="Record" type="radio" id="radio_31" class="with-gap radio-col-pink" value="0">
                                            <label for="radio_31">@Resources.Resources.LblNo</label>
                                        }
                                        else
                                        {
                                            <input name="Record" type="radio" id="radio_30" class="with-gap radio-col-red" value="1">
                                            <label for="radio_30">@Resources.Resources.LblYes</label>
                                            <input name="Record" type="radio" id="radio_31" class="with-gap radio-col-pink" checked="checked" value="0">
                                            <label for="radio_31">@Resources.Resources.LblNo</label>
                                        }

                                    </div>
                                    @Html.ValidationMessageFor(model => model.Record, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        @*<div class="form-row">
                <div class="col-md-6 mb-3">
                    @Html.TextBoxFor(model => model.files, "", new { @type = "file", @multiple = "multiple" })
                </div>
            </div>*@
                        <div class="form-row">
                            <div class="col-md-12 mb-3">
                                @*<input type="button" id="createClass" class="btn btn-primary float-right" value="@Resources.Resources.BtnCreateClass" />*@
                                <input type="submit" class="btn btn-primary float-right" value="@Resources.Resources.TxtUpdateClass" />
                            </div>
                        </div>
                    </div>
                </form>
                }
                else
                {
                    <p>no Data</p>
                }
            </div>
        </div>
    </div>
</div>

