@model ChillLearn.ViewModels.ClassViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/TeacherLayout.cshtml";
}
@*<div class="input-group clockpicker" data-autoclose="true">
        <input type="text" class="form-control" value="09:30">
        <div class="input-group-append">
            <span class="input-group-text"><i class="fa fa-clock-o" aria-hidden="true"></i></span>
        </div>
    </div>
    <div class="input-group">
        <input type="text" class="form-control mydatepicker" placeholder="Select Date">
        <div class="input-group-append">
            <span class="input-group-text"><i class="fa fa-calculator" aria-hidden="true"></i></span>
        </div>
    </div>*@

<div class="row">
    <div class="col-md-12">
        <div class="card radius">
            <div class="card-body p-t-15 p-b-15 tutor-application">
                <div class="table-responsive no-wrap">
                    <table class="table vm no-th-brd pro-of-month manage-admin-list m-b-0">
                        <tr>
                            <td>
                                <h6 class="text-white">@Resources.Resources.TxtCreateNewClass</h6>
                            </td>

                        </tr>
                    </table>
                </div>
            </div>

            <div class="card-body p-t-0">
                <form class=" form-list" action="/class/create" id="submitForm" method="POST" enctype="multipart/form-data">
                    <input type="hidden" name="BrainCertId" id="BrainCertId">
                    <div class="form-body">
                        @*<hr class="m-t-0 m-b-20">*@
                        @*<h5 class="box-title text-uppercase font-medium">Personal Details</h5>*@
                        <hr class="m-t-0 m-b-20">
                        @if (ViewData.ModelState["success"] != null)
                        {
                            <div class="alert alert-success" role="alert" style="position:relative;">
                                @Html.ValidationMessage("success")
                            </div>
                        }
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblTitle</label>
                                <input type="text" class="form-control" placeholder="@Resources.Resources.PlcTitle" name="title" id="clsTitle">
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblClassDate</label>
                                <div class="input-group" data-autoclose="true">
                                    <input type="text" autocomplete="off" class="form-control" id="datepicker-autoclose" name="Date" placeholder="@Resources.Resources.PlcSelectDate">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            @*<div class="col-md-6 mb-3">
                                    <label for="validationCustom01">@Resources.Resources.LblClassType</label>
                                    @Html.DropDownListFor(model => model.SessionType, new SelectList(Model.SessionTypes, "Value", "Text"), new { @class = "form-control custom-select selectBorder pl-1" })
                                    @Html.ValidationMessageFor(model => model.SessionType, "", new { @class = "text-danger" })
                                </div>*@
                            <div class="col-md-6 mb-3">
                                <div class="credit-refund-block credit-refund-block-new">
                                    <label>@Resources.Resources.LblClassType</label>
                                    <div class="demo-radio-button text-left">
                                        @foreach (var st in Model.SessionTypes)
                                        {

                                            <input name="SessionType" type="radio" id="@st.Text" class="with-gap radio-col-red" value="@st.Value">
                                            <label for="@st.Text">@st.Text</label>

                                            @Html.ValidationMessageFor(model => model.SessionType, "", new { @class = "text-danger" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblClassTime</label>
                                <div class="input-group clockpicker" data-autoclose="true">
                                    <input type="text" class="form-control" value="09:30" name="Time" id="clsTime">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fa fa-clock-o" aria-hidden="true"></i></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom01">@Resources.Resources.LblSubject</label>
                                @Html.DropDownListFor(model => model.Subject, Model.Subjects as SelectList, "-- Select Subject --", new { @class = "form-control custom-select pl-1 select2" })
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </div>


                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblDuration</label>
                                <input type="number" class="form-control" name="Duration" placeholder="2">
                                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">@Resources.Resources.LblDescription</label>
                                <textarea class="form-control" name="Description"></textarea>
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="credit-refund-block credit-refund-block-new">
                                    <h4 class="card-title  m-t-20 text-left">@Resources.Resources.TxtRecordClass</h4>
                                    <div class="demo-radio-button text-left">
                                        <input name="Record" type="radio" id="radio_30" class="with-gap radio-col-red" checked="" value="1">
                                        <label for="radio_30">@Resources.Resources.LblYes</label>
                                        <input name="Record" type="radio" id="radio_31" class="with-gap radio-col-pink" value="0">
                                        <label for="radio_31">@Resources.Resources.LblNo</label>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Record, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                @Html.TextBoxFor(model => model.files, "", new { @type = "file", @multiple = "multiple" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-12 mb-3">
                                <input type="button" id="createClass" class="btn btn-primary float-right" value="@Resources.Resources.BtnCreateClass" />
                                @*<input type="submit" class="btn btn-primary float-right" value="Create Class 1" />*@
                            </div>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@*<script src="~/Scripts/jquery-1.10.2.js"></script>*@
<script src="~/Content/js/jquery.min.js"></script>
<script src="https://momentjs.com/downloads/moment-with-locales.js"></script>
<script>

    //Get Lunch urls
    //$.ajax({
    //    //url: "https://api.braincert.com/v2/getclassreport?apikey=EBqafLB3sAk1HeCDxr4Z&classId=267167",
    //    url:"https://api.braincert.com/v2/getclasslaunch?apikey=EBqafLB3sAk1HeCDxr4Z&class_id=267441&userId=1122&userName=Faisal&isTeacher=1&courseName=education&lessonName=Test-555",
    //    type: "Post",
    //    success: function (data) {

    //        console.log(data);
    //    },
    //    error: function (response) {
    //        alert("error");
    //    },
    //    failure: function (response) {
    //        alert("fail");
    //    }
    //});

    //Get Reports
    $.ajax({
        url: "https://api.braincert.com/v2/getclassreport?apikey=EBqafLB3sAk1HeCDxr4Z&classId=267441",
        type: "Post",
        success: function (data) {

            console.log(data);
        },
        error: function (response) {
            alert("error");
        },
        failure: function (response) {
            alert("fail");
        }
    });

    $("#createClass").click(function () {
        var clsTitle = $("#clsTitle").val();
        var clsDate = $("#datepicker-autoclose").val();
        var newdate = clsDate.split("/").reverse().join("-");
        var clsTime = $("#clsTime").val();
        var clsEndTime = moment.utc(clsTime,'hh:mm').add(30,'minutes').format('hh:mm')
        var radioValue = $("input[name='Record']:checked").val();
        if (clsTitle != null || clsTitle != "") {
            $.ajax({
                url: "https://api.braincert.com/v2/schedule?apikey=EBqafLB3sAk1HeCDxr4Z&title=" + clsTitle + "&timezone=73&date=" + newdate + "&start_time=" + clsTime + "PM&end_time=" + clsEndTime + "PM& currency=SAR&ispaid=0&seat_attendees=1&record=" + radioValue + "",
                type: "Post",
                 dataType: 'json',
                success: function (data) {
                    $("#BrainCertId").val(data.class_id);
                    $("#submitForm").submit();
                },
                error: function (response) {
                    alert("error");
                },
                failure: function (response) {
                    alert("fail");
                }
            });
        } else {
            alert("Title can not be empty");
        }
    });
</script>