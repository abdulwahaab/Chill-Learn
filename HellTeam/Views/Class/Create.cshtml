@model ChillLearn.ViewModels.ClassViewModel
@{
    ViewBag.Title = "Create Class";
    Layout = "~/Views/Shared/TeacherLayout.cshtml";
}
<style type="text/css">
    .selectBig {
        width: 90px;
        border: 1px solid #ced4da !important;
    }

    .select {
        border: 1px solid #ced4da !important;
        width: 60px;
    }

    .datepicker {
        z-index: 9999 !important;
    }
</style>
<script type="text/javascript">
    $(function () {
        var classType = $('input[name="SessionType"]:checked').val();
        AdjustForm(classType);

        $('input[type=radio][name=SessionType]').change(function () {
            AdjustForm(this.value);
        });

        $('#DurationMinutes, #DurationHour').change(function () {
            var classHours = parseInt($('#DurationHour').val());
            var classMinutes = parseInt($('#DurationMinutes').val());
            if (classHours < 1) {
                if (classMinutes < 30) {
                    $('#msg-duration').text("@Resources.Resources.MsgClassDurationError");
                    $('#msg-duration').show();
                }
                else
                    $('#msg-duration').hide();
                //$('#msg-duration').text("Call cannot be for less than 30 minutes");
            }
        });

        setTimeout(function () {
            $('.text-danger').fadeOut();
        }, 3000);
    });

    function AdjustForm(classType) {
        if (classType == 2) {
            $('#div-record').addClass('hide');
            $('#div-duration').addClass('hide');
            $('#div-classtime').addClass('hide');
            $('#div-timezone').addClass('hide');
        }
        else {
            $('#div-record').removeClass('hide');
            $('#div-duration').removeClass('hide');
            $('#div-classtime').removeClass('hide');
            $('#div-timezone').removeClass('hide');
        }
    }
</script>

@if (ViewBag.IsApproved != true)
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-info">@Resources.Resources.MsgTutorNotVerified</div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-12">
            <div class="card radius">
                <div class="card-body p-t-15 p-b-15 tutor-application">
                    <div class="table-responsive no-wrap">
                        <div class="table vm no-th-brd pro-of-month manage-admin-list m-b-0">
                            <h6 class="text-white">@Resources.Resources.TxtCreateNewClass</h6>
                        </div>
                    </div>
                </div>
                <div class="card-body p-t-0">
                    <form class=" form-list" action="/class/create" id="submitForm" method="POST" enctype="multipart/form-data">
                        <input type="hidden" name="BrainCertId" id="BrainCertId">
                        @Html.HiddenFor(model => model.ClassID)
                        <div class="form-body">
                            <hr class="m-t-0 m-b-20">
                            @if (ViewData.ModelState["success"] != null)
                            {
                                <div class="alert alert-success" role="alert" style="position:relative;">
                                    @Html.ValidationMessage("success")
                                </div>
                            }
                            @if (ViewData.ModelState["error"] != null)
                            {
                                <div class="alert alert-danger" role="alert" style="position:relative;">
                                    @Html.ValidationMessage("error")
                                </div>
                            }
                            <div class="form-row">
                                <div class="col-md-6 mb-3">
                                    <label for="validationCustom02">@Resources.Resources.LblTitle</label>
                                    @Html.TextBoxFor(model => model.Title, new { @placeholder = @Resources.Resources.PlcTitle, @class = "form-control", @autofocus = "" })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="validationCustom01">@Resources.Resources.LblSubject</label>
                                    @Html.DropDownListFor(model => model.Subject, Model.Subjects as SelectList, Resources.Resources.LblSelectSubject, new { @class = "form-control custom-select pl-1 select2" })
                                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="credit-refund-block credit-refund-block-new">
                                        <h4 class="card-title text-left">@Resources.Resources.LblClassType</h4>
                                        <div class="demo-radio-button text-left">
                                            @foreach (var item in Model.SessionTypes)
                                            {
                                                @Html.RadioButtonFor(m => m.SessionType, item.Value, new { @class = "with-gap radio-col-pink", @id = "SessionType_" + item.Value })
                                                <label for="SessionType_@item.Value">@item.Text</label>
                                            }
                                        </div>
                                        @Html.ValidationMessageFor(model => model.SessionType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="validationCustom02">@Resources.Resources.LblClassTime</label>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="input-group" data-autoclose="true">
                                                @Html.TextBoxFor(model => model.Date, new { @placeholder = @Resources.Resources.PlcSelectDate, @class = "form-control", @id = "datepicker-autoclose" })
                                                <div class="input-group-append">
                                                    <span class="input-group-text"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(model => model.ClassHour, Model.HourList as SelectList, new { @class = "form-control select" })
                                            @Html.DropDownListFor(model => model.ClassMinute, Model.MinuteList as SelectList, new { @class = "form-control select" })
                                            @Html.DropDownListFor(model => model.ClassAMPM, Model.AMPMList as SelectList, new { @class = "form-control select" })
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3" id="div-timezone">
                                    <label for="validationCustom01">@Resources.Resources.LblTimeZone</label>
                                    @Html.DropDownListFor(model => model.TimeZone, Model.TimeZones as SelectList, Resources.Resources.LblTimeZone, new { @class = "form-control custom-select pl-1 select2" })
                                    @Html.ValidationMessageFor(model => model.TimeZone, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3" id="div-duration">
                                    <label for="validationCustom02">@Resources.Resources.LblDuration</label>
                                    <div class="row">
                                        <div class="col-md-12">
                                            @Html.DropDownListFor(model => model.DurationHour, Model.DurationHourList as SelectList, new { @class = "form-control selectBig pl-2" })
                                            @Resources.Resources.LblHours
                                            @Html.DropDownListFor(model => model.DurationMinutes, Model.DurationMinuteList as SelectList, new { @class = "form-control selectBig pl-2" })
                                            @Resources.Resources.LblMinutes
                                        </div>
                                    </div>
                                    @if (ViewData.ModelState["classtime-error"] != null)
                                    {
                                        <div class="text-danger" id="msg-duration">
                                            @Html.ValidationMessage("classtime-error")
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-3">
                                    <label for="validationCustom02">@Resources.Resources.LblDescription</label>
                                    @Html.TextAreaFor(model => model.Description, new { @maxlength = "1500", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3" id="div-record">
                                    <div class="credit-refund-block credit-refund-block-new">
                                        <h4 class="card-title  m-t-20 text-left">@Resources.Resources.TxtRecordClass</h4>
                                        <div class="demo-radio-button text-left">
                                            <input name="Record" type="radio" id="radio_30" class="with-gap radio-col-red" checked="" value="1">
                                            <label for="radio_30">@Resources.Resources.LblYes</label>
                                            <input name="Record" type="radio" id="radio_31" class="with-gap radio-col-pink" value="0">
                                            <label for="radio_31">@Resources.Resources.LblNo</label>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Record, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6 mb-3">
                                    @Html.TextBoxFor(model => model.files, "", new { @type = "file", @multiple = "multiple" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-12 mb-3">
                                    @Html.HiddenFor(model => model.ClassEndTime, new { @id = "end-time" })
                                    <input type="submit" id="createClass" class="btn btn-primary float-right" value="@Resources.Resources.BtnCreateClass" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@*<script src="https://momentjs.com/downloads/moment-with-locales.js"></script>
    <script type="text/javascript">

        $('.timepicker').clockpicker({
            twelvehour: true,
            leadingSpaceAmPm: true,
            autoclose: false,
            donetext: 'Done'
        }).find('input').change(function () {
            var durationMinutes = $('#duration').val() * 60;
            if (durationMinutes > 30)
                durationMinutes = 30;
            var classEndTime = moment.utc(this.value, 'hh:mm A').add(durationMinutes, 'minutes').format('hh:mm A')
            $('#end-time').val(classEndTime);
        });

        $('#duration').change(function () {
            SetClassEndTime(this.value);
        });

        $('#duration').keyup(function () {
            SetClassEndTime(this.value);
        });

        function SetClassEndTime(duration) {
            var durationMinutes = duration * 60;
            if (durationMinutes > 30)
                durationMinutes = 30;
            var classTime = $('#clsTime').val();
            var classEndTime = moment.utc(classTime, 'hh:mm A').add(durationMinutes, 'minutes').format('hh:mm A')
            $('#end-time').val(classEndTime);
        }

    </script>*@